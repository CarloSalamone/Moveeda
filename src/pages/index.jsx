import styles from "../styles/Home.module.scss";

import { useEffect, useState } from "react";
import { getSession } from "next-auth/react";
import { useRouter } from "next/router";
import { HTTP_GET } from "../../libs/HTTP";

import Head from "next/head";
import Header from "@/components/header";
import Slider from "@/components/slider";
import TabButton from "../components/tabButton";
import EventList from "../components/eventList";
import NavBar from "@/components/navBar";
import Footer from "@/components/footer";
import Pages from "@/components/pages";
const Home = ({ session }) => {
  const [selectedTab, setSelectedTab] = useState("Museec");
  const [categories, setCategories] = useState([]);
  const [events, setEvents] = useState([]);
  const [pageEvents, setPageEvents] = useState(1);
  const router = useRouter();

  useEffect(() => {
    if (!localStorage.getItem("intro")) router.push("/intro");
  }, []);

  useEffect(() => {
    fetch(`api/events/getEventsByCategory?category=${selectedTab}&page=1`)
      .then((res) => res.json())
      .then((data) => setEvents(data));
  }, [selectedTab]);

  // useEffect(() => {
  //   fetch(
  //     `api/events/getEventsByCategory?category=${selectedTab}&page=${pageEvents}`
  //   )
  //     .then((res) => res.json())
  //     .then((data) => setEvents(data));
  // }, [pageEvents]);

  const handlePageChange = (pageNumber) => {
        setPageEvents(pageNumber);
        fetch(
              `api/events/getEventsByCategory?category=${selectedTab}&page=${pageNumber}`
            )
              .then((res) => res.json())
              .then((data) => setEvents(data));
  };

  useEffect(() => {
    const getCategories = async () => {
      const categories = await HTTP_GET("categories");
      setCategories(categories);
    };
    getCategories();
  }, []);

  const handleSelect = (selectedButton) => {
    setSelectedTab(selectedButton);
  };

  return (
    <>
      <Head>
        <title>Moveeda</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />
        <Slider />
        <section className={styles.SectionTab}>
          {categories.map((category, key) => (
            <TabButton
              key={category._id}
              color={category.color}
              onSelect={() => handleSelect(category.name)}
            >
              {category.name.toUpperCase()}
            </TabButton>
          ))}
        </section>
        <EventList events={events.data} title={selectedTab} />
        <Pages
          pagesNumber={events?.totalPages}
          page={events?.currentPage}
          setPage={handlePageChange}
        />
        <NavBar userType={session?.user?.type} userId={session?.users?.id} />
        <Footer />
      </main>
    </>
  );
};

export async function getServerSideProps(context) {
  return {
    props: {
      session: await getSession(context),
    },
  };
}

export default Home;
